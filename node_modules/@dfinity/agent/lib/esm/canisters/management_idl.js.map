{"version":3,"file":"management_idl.js","sourceRoot":"","sources":["../../../src/canisters/management_idl.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This file is generated from the candid for asset management.\n * didc version: 0.3.6\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ IDL }) => {\n  const bitcoin_network = IDL.Variant({\n    mainnet: IDL.Null,\n    testnet: IDL.Null,\n  });\n  const bitcoin_address = IDL.Text;\n  const get_balance_request = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32),\n  });\n  const satoshi = IDL.Nat64;\n  const get_current_fee_percentiles_request = IDL.Record({\n    network: bitcoin_network,\n  });\n  const millisatoshi_per_byte = IDL.Nat64;\n  const get_utxos_request = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(\n      IDL.Variant({\n        page: IDL.Vec(IDL.Nat8),\n        min_confirmations: IDL.Nat32,\n      }),\n    ),\n    address: bitcoin_address,\n  });\n  const block_hash = IDL.Vec(IDL.Nat8);\n  const outpoint = IDL.Record({\n    txid: IDL.Vec(IDL.Nat8),\n    vout: IDL.Nat32,\n  });\n  const utxo = IDL.Record({\n    height: IDL.Nat32,\n    value: satoshi,\n    outpoint: outpoint,\n  });\n  const get_utxos_response = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: IDL.Nat32,\n    tip_block_hash: block_hash,\n    utxos: IDL.Vec(utxo),\n  });\n  const send_transaction_request = IDL.Record({\n    transaction: IDL.Vec(IDL.Nat8),\n    network: bitcoin_network,\n  });\n  const canister_id = IDL.Principal;\n  const change_origin = IDL.Variant({\n    from_user: IDL.Record({ user_id: IDL.Principal }),\n    from_canister: IDL.Record({\n      canister_version: IDL.Opt(IDL.Nat64),\n      canister_id: IDL.Principal,\n    }),\n  });\n  const change_details = IDL.Variant({\n    creation: IDL.Record({ controllers: IDL.Vec(IDL.Principal) }),\n    code_deployment: IDL.Record({\n      mode: IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Null,\n        install: IDL.Null,\n      }),\n      module_hash: IDL.Vec(IDL.Nat8),\n    }),\n    controllers_change: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal),\n    }),\n    code_uninstall: IDL.Null,\n  });\n  const change = IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    canister_version: IDL.Nat64,\n    origin: change_origin,\n    details: change_details,\n  });\n  const definite_canister_settings = IDL.Record({\n    freezing_threshold: IDL.Nat,\n    controllers: IDL.Vec(IDL.Principal),\n    memory_allocation: IDL.Nat,\n    compute_allocation: IDL.Nat,\n  });\n  const canister_settings = IDL.Record({\n    freezing_threshold: IDL.Opt(IDL.Nat),\n    controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n    memory_allocation: IDL.Opt(IDL.Nat),\n    compute_allocation: IDL.Opt(IDL.Nat),\n  });\n  const ecdsa_curve = IDL.Variant({ secp256k1: IDL.Null });\n  const http_header = IDL.Record({ value: IDL.Text, name: IDL.Text });\n  const http_response = IDL.Record({\n    status: IDL.Nat,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(http_header),\n  });\n  const chunk_hash = IDL.Vec(IDL.Nat8);\n  const wasm_module = IDL.Vec(IDL.Nat8);\n  const node_metrics = IDL.Record({\n    num_block_failures_total: IDL.Nat64,\n    node_id: IDL.Principal,\n    num_blocks_total: IDL.Nat64,\n  });\n  return IDL.Service({\n    bitcoin_get_balance: IDL.Func([get_balance_request], [satoshi], []),\n    bitcoin_get_balance_query: IDL.Func([get_balance_request], [satoshi], ['query']),\n    bitcoin_get_current_fee_percentiles: IDL.Func(\n      [get_current_fee_percentiles_request],\n      [IDL.Vec(millisatoshi_per_byte)],\n      [],\n    ),\n    bitcoin_get_utxos: IDL.Func([get_utxos_request], [get_utxos_response], []),\n    bitcoin_get_utxos_query: IDL.Func([get_utxos_request], [get_utxos_response], ['query']),\n    bitcoin_send_transaction: IDL.Func([send_transaction_request], [], []),\n    canister_info: IDL.Func(\n      [\n        IDL.Record({\n          canister_id: canister_id,\n          num_requested_changes: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [\n        IDL.Record({\n          controllers: IDL.Vec(IDL.Principal),\n          module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n          recent_changes: IDL.Vec(change),\n          total_num_changes: IDL.Nat64,\n        }),\n      ],\n      [],\n    ),\n    canister_status: IDL.Func(\n      [IDL.Record({ canister_id: canister_id })],\n      [\n        IDL.Record({\n          status: IDL.Variant({\n            stopped: IDL.Null,\n            stopping: IDL.Null,\n            running: IDL.Null,\n          }),\n          memory_size: IDL.Nat,\n          cycles: IDL.Nat,\n          settings: definite_canister_settings,\n          idle_cycles_burned_per_day: IDL.Nat,\n          module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n        }),\n      ],\n      [],\n    ),\n    clear_chunk_store: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n    create_canister: IDL.Func(\n      [\n        IDL.Record({\n          settings: IDL.Opt(canister_settings),\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [IDL.Record({ canister_id: canister_id })],\n      [],\n    ),\n    delete_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n    deposit_cycles: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n    ecdsa_public_key: IDL.Func(\n      [\n        IDL.Record({\n          key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n          canister_id: IDL.Opt(canister_id),\n          derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n        }),\n      ],\n      [\n        IDL.Record({\n          public_key: IDL.Vec(IDL.Nat8),\n          chain_code: IDL.Vec(IDL.Nat8),\n        }),\n      ],\n      [],\n    ),\n    http_request: IDL.Func(\n      [\n        IDL.Record({\n          url: IDL.Text,\n          method: IDL.Variant({\n            get: IDL.Null,\n            head: IDL.Null,\n            post: IDL.Null,\n          }),\n          max_response_bytes: IDL.Opt(IDL.Nat64),\n          body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n          transform: IDL.Opt(\n            IDL.Record({\n              function: IDL.Func(\n                [\n                  IDL.Record({\n                    context: IDL.Vec(IDL.Nat8),\n                    response: http_response,\n                  }),\n                ],\n                [http_response],\n                ['query'],\n              ),\n              context: IDL.Vec(IDL.Nat8),\n            }),\n          ),\n          headers: IDL.Vec(http_header),\n        }),\n      ],\n      [http_response],\n      [],\n    ),\n    install_chunked_code: IDL.Func(\n      [\n        IDL.Record({\n          arg: IDL.Vec(IDL.Nat8),\n          wasm_module_hash: IDL.Vec(IDL.Nat8),\n          mode: IDL.Variant({\n            reinstall: IDL.Null,\n            upgrade: IDL.Opt(IDL.Record({ skip_pre_upgrade: IDL.Opt(IDL.Bool) })),\n            install: IDL.Null,\n          }),\n          chunk_hashes_list: IDL.Vec(chunk_hash),\n          target_canister: canister_id,\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n          storage_canister: IDL.Opt(canister_id),\n        }),\n      ],\n      [],\n      [],\n    ),\n    install_code: IDL.Func(\n      [\n        IDL.Record({\n          arg: IDL.Vec(IDL.Nat8),\n          wasm_module: wasm_module,\n          mode: IDL.Variant({\n            reinstall: IDL.Null,\n            upgrade: IDL.Opt(IDL.Record({ skip_pre_upgrade: IDL.Opt(IDL.Bool) })),\n            install: IDL.Null,\n          }),\n          canister_id: canister_id,\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [],\n      [],\n    ),\n    node_metrics_history: IDL.Func(\n      [\n        IDL.Record({\n          start_at_timestamp_nanos: IDL.Nat64,\n          subnet_id: IDL.Principal,\n        }),\n      ],\n      [\n        IDL.Vec(\n          IDL.Record({\n            timestamp_nanos: IDL.Nat64,\n            node_metrics: IDL.Vec(node_metrics),\n          }),\n        ),\n      ],\n      [],\n    ),\n    provisional_create_canister_with_cycles: IDL.Func(\n      [\n        IDL.Record({\n          settings: IDL.Opt(canister_settings),\n          specified_id: IDL.Opt(canister_id),\n          amount: IDL.Opt(IDL.Nat),\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [IDL.Record({ canister_id: canister_id })],\n      [],\n    ),\n    provisional_top_up_canister: IDL.Func(\n      [IDL.Record({ canister_id: canister_id, amount: IDL.Nat })],\n      [],\n      [],\n    ),\n    raw_rand: IDL.Func([], [IDL.Vec(IDL.Nat8)], []),\n    sign_with_ecdsa: IDL.Func(\n      [\n        IDL.Record({\n          key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n          derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n          message_hash: IDL.Vec(IDL.Nat8),\n        }),\n      ],\n      [IDL.Record({ signature: IDL.Vec(IDL.Nat8) })],\n      [],\n    ),\n    start_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n    stop_canister: IDL.Func([IDL.Record({ canister_id: canister_id })], [], []),\n    stored_chunks: IDL.Func([IDL.Record({ canister_id: canister_id })], [IDL.Vec(chunk_hash)], []),\n    uninstall_code: IDL.Func(\n      [\n        IDL.Record({\n          canister_id: canister_id,\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [],\n      [],\n    ),\n    update_settings: IDL.Func(\n      [\n        IDL.Record({\n          canister_id: IDL.Principal,\n          settings: canister_settings,\n          sender_canister_version: IDL.Opt(IDL.Nat64),\n        }),\n      ],\n      [],\n      [],\n    ),\n    upload_chunk: IDL.Func(\n      [\n        IDL.Record({\n          chunk: IDL.Vec(IDL.Nat8),\n          canister_id: IDL.Principal,\n        }),\n      ],\n      [chunk_hash],\n      [],\n    ),\n  });\n};\n"]}