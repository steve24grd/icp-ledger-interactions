import { AgentError } from './errors';
export declare type ObserveFunction<T> = (data: T) => void;
export declare class Observable<T> extends Function {
    #private;
    observers: ObserveFunction<T>[];
    constructor();
    subscribe(func: ObserveFunction<T>): void;
    unsubscribe(func: ObserveFunction<T>): void;
    notify(data: T): void;
}
export declare type AgentLog = {
    message: string;
    level: 'warn' | 'info';
} | {
    message: string;
    level: 'error';
    error: AgentError;
};
export declare class ObservableLog extends Observable<AgentLog> {
    #private;
    constructor();
    log(message: string): void;
    warn(message: string): void;
    error(message: string, error: AgentError): void;
}
